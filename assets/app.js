angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope","$location","$window","UserSvc",function(e,t,n,o){if(e.$on("login",function(n,o){e.currentUser=o,t.path("/")}),e.logout=function(){delete e.currentUser,t.path("/"),window.sessionStorage.removeItem("token")},o.isLoggedIn()){o.getUser().then(function(t){e.currentUser=t})}}]),angular.module("app").controller("AskCtrl",["$scope","QuestSvc",function(e,t){e.addQuestion=function(){e.postBody&&t.create({username:"dickeyxxx",body:e.postBody}).success(function(t){e.questions.unshift(t),e.postBody=null})},t.fetch().success(function(t){e.questions=t})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(e,t){e.login=function(n,o){e.errorMsg="",t.login(n,o).then(function(t){e.$emit("login",t)},function(){e.errorMsg="Incorrect username/password."})}}]),angular.module("app").controller("QuestCtrl",["$scope","QuestSvc","$location",function(e,t,n){e.addQuestion=function(){e.postBody&&t.create({username:"dickeyxxx",title:e.title,body:e.postBody,answersCount:0,upvote:0,downvote:0}).success(function(t){e.questions.unshift(t),e.postBody=null,n.path("/")})},e.askQuestionView=function(){n.path("/ask")},t.fetch().success(function(t){e.questions=t}),e.getQuestionById=function(n){t.fetchById(n).then(function(t){e.quest=t})},e.addAnswer=function(){console.log("answering")}}]),angular.module("app").service("QuestSvc",["$http",function(e){this.fetch=function(){return e.get("/api/quests")},this.fetchById=function(t){return e.get("/api/quests?id="+t)},this.create=function(t){return e.post("/api/quests",t)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(e,t){e.register=function(n,o){t.register(n,o).then(function(t){e.$emit("login",t)})}}]),angular.module("app").config(["$routeProvider",function(e){e.when("/",{controller:"QuestCtrl",templateUrl:"/templates/questions.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"/templates/register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"/templates/login.html"}).when("/ask",{controller:"QuestCtrl",templateUrl:"/templates/ask.html"}).when("/quest/:questId",{controller:"SingleQuestCtrl",templateUrl:"/templates/quest.html"})}]),angular.module("app").controller("SingleQuestCtrl",["$scope","$routeParams","SingleQuestSvc","$location",function(e,t,n){n.fetchById(t.questId).then(function(t){console.log(t),e.quest=t.data}),e.addAnswer=function(){console.log("answering")}}]),angular.module("app").service("SingleQuestSvc",["$http",function(e){this.fetchById=function(t){return e.get("/api/quests/"+t)}}]),angular.module("app").service("UserSvc",["$http",function(e){var t=this;t.getUser=function(){return e.get("/api/users").then(function(e){return e.data})},t.login=function(n,o){return e.post("/api/sessions",{username:n,password:o}).then(function(n){return window.sessionStorage.token=n.data,e.defaults.headers.common["x-auth"]=n.data,t.getUser()})},t.register=function(n,o){return e.post("/api/users",{username:n,password:o}).then(function(){return t.login(n,o)})},t.isLoggedIn=function(){var t=!1;return window.sessionStorage.token&&(e.defaults.headers.common["x-auth"]=window.sessionStorage.token,t=!0),t}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJhc2suY3RybC5qcyIsImxvZ2luLmN0cmwuanMiLCJxdWVzdC5jdHJsLmpzIiwicXVlc3Quc3ZjLmpzIiwicmVnaXN0ZXIuY3RybC5qcyIsInJvdXRlcy5qcyIsInNpbmdsZXF1ZXN0LmN0cmwuanMiLCJzaW5nbGVxdWVzdC5zdmMuanMiLCJ1c2VyLnN2Yy5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsIiRzY29wZSIsIiRsb2NhdGlvbiIsIiR3aW5kb3ciLCJVc2VyU3ZjIiwiJG9uIiwiXyIsInVzZXIiLCJjdXJyZW50VXNlciIsInBhdGgiLCJsb2dvdXQiLCJ3aW5kb3ciLCJzZXNzaW9uU3RvcmFnZSIsInJlbW92ZUl0ZW0iLCJpc0xvZ2dlZEluIiwiZ2V0VXNlciIsInRoZW4iLCJyZXNwb25zZSIsIlF1ZXN0U3ZjIiwiYWRkUXVlc3Rpb24iLCJwb3N0Qm9keSIsImNyZWF0ZSIsInVzZXJuYW1lIiwiYm9keSIsInN1Y2Nlc3MiLCJxdWVzdGlvbiIsInF1ZXN0aW9ucyIsInVuc2hpZnQiLCJmZXRjaCIsImxvZ2luIiwicGFzc3dvcmQiLCJlcnJvck1zZyIsIiRlbWl0IiwidGl0bGUiLCJhbnN3ZXJzQ291bnQiLCJ1cHZvdGUiLCJkb3dudm90ZSIsImFza1F1ZXN0aW9uVmlldyIsImdldFF1ZXN0aW9uQnlJZCIsImlkIiwiZmV0Y2hCeUlkIiwicXVlc3QiLCJhZGRBbnN3ZXIiLCJjb25zb2xlIiwibG9nIiwic2VydmljZSIsIiRodHRwIiwidGhpcyIsImdldCIsInBvc3QiLCJyZWdpc3RlciIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwiJHJvdXRlUGFyYW1zIiwiU2luZ2xlUXVlc3RTdmMiLCJxdWVzdElkIiwiZGF0YSIsInN2YyIsInRva2VuIiwiZGVmYXVsdHMiLCJoZWFkZXJzIiwiY29tbW9uIiwicmVzdWx0Il0s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QXBELE9BQUFDLGVBQUFnRCxNQUNBSSxHQUFBLEdBRUZBIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdhcHAnLCBbXG4gICduZ1JvdXRlJ1xuXSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ0FwcGxpY2F0aW9uQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsICRsb2NhdGlvbiwgJHdpbmRvdywgVXNlclN2Yykge1xuICAkc2NvcGUuJG9uKCdsb2dpbicsIGZ1bmN0aW9uIChfLCB1c2VyKSB7XG4gICAgJHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlclxuICAgICRsb2NhdGlvbi5wYXRoKCcvJylcbiAgfSlcblxuICAkc2NvcGUubG9nb3V0ID0gZnVuY3Rpb24oKXtcbiAgXHRkZWxldGUoJHNjb3BlLmN1cnJlbnRVc2VyKSBcbiAgICAkbG9jYXRpb24ucGF0aCgnLycpXG4gICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oJ3Rva2VuJylcbiAgfVxuXG4gIGlmKFVzZXJTdmMuaXNMb2dnZWRJbigpKXtcblx0ICBcdHZhciB1c2VyID0gVXNlclN2Yy5nZXRVc2VyKCkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XG5cdFx0ICAgICRzY29wZS5jdXJyZW50VXNlciA9IHJlc3BvbnNlO1xuXHQgIFx0fSlcbiBcdH1cblxufSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ0Fza0N0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBRdWVzdFN2Yykge1xuICAkc2NvcGUuYWRkUXVlc3Rpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCRzY29wZS5wb3N0Qm9keSkge1xuICAgICAgUXVlc3RTdmMuY3JlYXRlKHtcbiAgICAgICAgdXNlcm5hbWU6ICdkaWNrZXl4eHgnLFxuICAgICAgICBib2R5OiAgICAgJHNjb3BlLnBvc3RCb2R5XG4gICAgICB9KVxuICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKHF1ZXN0aW9uKSB7XG4gICAgICAgICRzY29wZS5xdWVzdGlvbnMudW5zaGlmdChxdWVzdGlvbilcbiAgICAgICAgJHNjb3BlLnBvc3RCb2R5ID0gbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICBRdWVzdFN2Yy5mZXRjaCgpXG4gIC5zdWNjZXNzKGZ1bmN0aW9uIChxdWVzdGlvbnMpIHtcbiAgICAkc2NvcGUucXVlc3Rpb25zID0gcXVlc3Rpb25zXG4gIH0pXG59KSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ0xvZ2luQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIFVzZXJTdmMpIHtcbiAgJHNjb3BlLmxvZ2luID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICBcdCRzY29wZS5lcnJvck1zZyA9ICcnO1xuICAgIFVzZXJTdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuICAgIC50aGVuKGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICAkc2NvcGUuJGVtaXQoJ2xvZ2luJywgdXNlcilcbiAgICB9LCBmdW5jdGlvbihlcnJvcil7XG4gICAgXHQkc2NvcGUuZXJyb3JNc2cgPSBcIkluY29ycmVjdCB1c2VybmFtZS9wYXNzd29yZC5cIjtcbiAgICB9KVxuICB9XG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignUXVlc3RDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgUXVlc3RTdmMsICRsb2NhdGlvbikge1xuICAkc2NvcGUuYWRkUXVlc3Rpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCRzY29wZS5wb3N0Qm9keSkge1xuICAgICAgUXVlc3RTdmMuY3JlYXRlKHtcbiAgICAgICAgdXNlcm5hbWU6ICdkaWNrZXl4eHgnLFxuICAgICAgICB0aXRsZTogICAgJHNjb3BlLnRpdGxlLFxuICAgICAgICBib2R5OiAgICAgJHNjb3BlLnBvc3RCb2R5LFxuICAgICAgICBhbnN3ZXJzQ291bnQ6IDAsXG4gICAgICAgIHVwdm90ZTogICAwLFxuICAgICAgICBkb3dudm90ZTogMFxuICAgICAgfSlcbiAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uIChxdWVzdGlvbikge1xuICAgICAgICAkc2NvcGUucXVlc3Rpb25zLnVuc2hpZnQocXVlc3Rpb24pXG4gICAgICAgICRzY29wZS5wb3N0Qm9keSA9IG51bGxcbiAgICAgICAgJGxvY2F0aW9uLnBhdGgoJy8nKVxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICAkc2NvcGUuYXNrUXVlc3Rpb25WaWV3ID0gZnVuY3Rpb24oKXtcbiAgICAkbG9jYXRpb24ucGF0aCgnL2FzaycpO1xuICB9XG5cbiAgUXVlc3RTdmMuZmV0Y2goKVxuICAuc3VjY2VzcyhmdW5jdGlvbiAocXVlc3Rpb25zKSB7XG4gICAgJHNjb3BlLnF1ZXN0aW9ucyA9IHF1ZXN0aW9uc1xuICB9KVxuXG4gICRzY29wZS5nZXRRdWVzdGlvbkJ5SWQgPSBmdW5jdGlvbiAoaWQpe1xuICAgIFF1ZXN0U3ZjLmZldGNoQnlJZChpZCkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XG4gICAgICAkc2NvcGUucXVlc3QgPSByZXNwb25zZTtcbiAgICB9KVxuICB9XG5cbiAgJHNjb3BlLmFkZEFuc3dlciA9IGZ1bmN0aW9uKCl7XG4gICAgY29uc29sZS5sb2coXCJhbnN3ZXJpbmdcIik7XG4gIH1cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5zZXJ2aWNlKCdRdWVzdFN2YycsIGZ1bmN0aW9uICgkaHR0cCkge1xuICB0aGlzLmZldGNoID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvcXVlc3RzJylcbiAgfVxuICBcbiAgdGhpcy5mZXRjaEJ5SWQgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3F1ZXN0cz9pZD0nICsgaWQpXG4gIH1cblxuICB0aGlzLmNyZWF0ZSA9IGZ1bmN0aW9uIChxdWVzdCkge1xuICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3F1ZXN0cycsIHF1ZXN0KVxuICB9XG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignUmVnaXN0ZXJDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2Yykge1xuICAkc2NvcGUucmVnaXN0ZXIgPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgVXNlclN2Yy5yZWdpc3Rlcih1c2VybmFtZSwgcGFzc3dvcmQpXG4gICAgLnRoZW4oZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgICRzY29wZS4kZW1pdCgnbG9naW4nLCB1c2VyKVxuICAgIH0pXG4gIH1cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb25maWcoZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyKSB7XG4gICRyb3V0ZVByb3ZpZGVyXG4gIC53aGVuKCcvJywgICAgICAgICB7IGNvbnRyb2xsZXI6ICdRdWVzdEN0cmwnLCB0ZW1wbGF0ZVVybDogJy90ZW1wbGF0ZXMvcXVlc3Rpb25zLmh0bWwnIH0pXG4gIC53aGVuKCcvcmVnaXN0ZXInLCB7IGNvbnRyb2xsZXI6ICdSZWdpc3RlckN0cmwnLCB0ZW1wbGF0ZVVybDogJy90ZW1wbGF0ZXMvcmVnaXN0ZXIuaHRtbCcgfSlcbiAgLndoZW4oJy9sb2dpbicsICAgIHsgY29udHJvbGxlcjogJ0xvZ2luQ3RybCcsIHRlbXBsYXRlVXJsOiAnL3RlbXBsYXRlcy9sb2dpbi5odG1sJyB9KVxuICAud2hlbignL2FzaycsICAgICAgeyBjb250cm9sbGVyOiAnUXVlc3RDdHJsJywgdGVtcGxhdGVVcmw6ICcvdGVtcGxhdGVzL2Fzay5odG1sJyB9KVxuICAud2hlbignL3F1ZXN0LzpxdWVzdElkJywgICAgeyBjb250cm9sbGVyOiAnU2luZ2xlUXVlc3RDdHJsJywgdGVtcGxhdGVVcmw6ICcvdGVtcGxhdGVzL3F1ZXN0Lmh0bWwnIH0pXG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignU2luZ2xlUXVlc3RDdHJsJywgWyckc2NvcGUnLCAnJHJvdXRlUGFyYW1zJywgJ1NpbmdsZVF1ZXN0U3ZjJywgJyRsb2NhdGlvbicsXG4gIGZ1bmN0aW9uKCRzY29wZSwgJHJvdXRlUGFyYW1zLCBTaW5nbGVRdWVzdFN2YywgJGxvY2F0aW9uKSB7XG5cbiAgICBTaW5nbGVRdWVzdFN2Yy5mZXRjaEJ5SWQoJHJvdXRlUGFyYW1zLnF1ZXN0SWQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xuICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpXG4gICAgICAkc2NvcGUucXVlc3QgPSByZXNwb25zZS5kYXRhO1xuICAgIH0pXG5cbiAgICAkc2NvcGUuYWRkQW5zd2VyID0gZnVuY3Rpb24oKXtcbiAgICAgIGNvbnNvbGUubG9nKFwiYW5zd2VyaW5nXCIpO1xuICAgIH1cbn1dKVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnU2luZ2xlUXVlc3RTdmMnLCBmdW5jdGlvbiAoJGh0dHApIHtcblxuICB0aGlzLmZldGNoQnlJZCA9IGZ1bmN0aW9uIChpZCkge1xuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvcXVlc3RzLycgKyBpZClcbiAgfVxuXG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnVXNlclN2YycsIGZ1bmN0aW9uICgkaHR0cCkge1xuICB2YXIgc3ZjID0gdGhpc1xuICBzdmMuZ2V0VXNlciA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3VzZXJzJylcbiAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgIHJldHVybiByZXNwb25zZS5kYXRhXG4gICAgfSlcbiAgfVxuICBzdmMubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvc2Vzc2lvbnMnLCB7XG4gICAgICB1c2VybmFtZTogdXNlcm5hbWUsIHBhc3N3b3JkOiBwYXNzd29yZFxuICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UudG9rZW4gPSByZXNwb25zZS5kYXRhXG4gICAgICAkaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsneC1hdXRoJ10gPSByZXNwb25zZS5kYXRhXG4gICAgICByZXR1cm4gc3ZjLmdldFVzZXIoKVxuICAgIH0pXG4gIH1cbiAgc3ZjLnJlZ2lzdGVyID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3VzZXJzJywge1xuICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLCBwYXNzd29yZDogcGFzc3dvcmRcbiAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBzdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuICAgIH0pXG4gIH1cbiAgc3ZjLmlzTG9nZ2VkSW4gPSBmdW5jdGlvbiAoKXtcbiAgICB2YXIgcmVzdWx0ID0gZmFsc2U7XG4gICAgaWYod2luZG93LnNlc3Npb25TdG9yYWdlLnRva2VuKXtcbiAgICAgICRodHRwLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWyd4LWF1dGgnXSA9IHdpbmRvdy5zZXNzaW9uU3RvcmFnZS50b2tlblxuICAgICAgcmVzdWx0ID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufSlcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==